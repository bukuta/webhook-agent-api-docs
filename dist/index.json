{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Webhook-agent Api Descriptions",
    "description": "Webhook-agent项目接口描述 <br /><a href='https://github.com/bukuta/webhook-agent' target=\"_blank\">mock-server</a>"
  },
  "servers": [
    {
      "description": "local mock",
      "name": "local_mock",
      "url": "/api/v1"
    }
  ],
  "x-server": [
    {
      "description": "后端",
      "url": "http://mock.bbfe.group/project/5a27b0d11c6fcc1a712bfce9"
    }
  ],
  "externalDocs": {
    "description": "webhook-agent",
    "url": "https://github.com/bukuta/webhook-agent"
  },
  "paths": {
    "/projects/{projectId}/actions": {
      "get": {
        "tags": [
          "Actions"
        ],
        "description": "fetch project actions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Action"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Actions"
        ],
        "description": "create project actions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "动作",
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ActionType"
                  },
                  "project": {
                    "type": "integer",
                    "x-mock": "@integer",
                    "x-$ref": "#/components/schemas/Project"
                  },
                  "hook": {
                    "type": "integer",
                    "x-mock": "@integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins": {
      "get": {
        "tags": [
          "Admins"
        ],
        "description": "fetch admins",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admins"
        ],
        "description": "create admin",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "管理员",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "名字",
                    "x-mock": "@word"
                  },
                  "cname": {
                    "type": "string",
                    "description": "中文名",
                    "x-mock": "@cname"
                  },
                  "password": {
                    "type": "string",
                    "description": "密码",
                    "x-mock": ""
                  },
                  "status": {
                    "type": "integer",
                    "description": "用户目前的状态(0允许/1禁止/2锁定)",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "x-mock": "0"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins/{adminId}": {
      "get": {
        "tags": [
          "Admins"
        ],
        "description": "fetch admin",
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "ID of admin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Admins"
        ],
        "description": "update admin",
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "ID of Admin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "管理员",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "名字",
                    "x-mock": "@word"
                  },
                  "cname": {
                    "type": "string",
                    "description": "中文名",
                    "x-mock": "@cname"
                  },
                  "password": {
                    "type": "string",
                    "description": "密码",
                    "x-mock": ""
                  },
                  "status": {
                    "type": "integer",
                    "description": "用户目前的状态(0允许/1禁止/2锁定)",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "x-mock": "0"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admins"
        ],
        "description": "delete admin",
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "ID of admin",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/projects/hooks": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "description": "fetch project hooks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Hook"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "fetch projects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "create projects",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-mock": "@ctitle"
                  },
                  "repository": {
                    "type": "string",
                    "x-mock": "https://github.com/@word(6)/@word(6).git"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "fetch project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "description": "update project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-mock": "@ctitle"
                  },
                  "repository": {
                    "type": "string",
                    "x-mock": "https://github.com/@word(6)/@word(6).git"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "delete project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/projects/{projectId}/hooks": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "fetch hooks",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Hook"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "create hook",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Hook"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-mock": "@string"
                  },
                  "type": {
                    "type": "string",
                    "x-mock": "@string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/branches": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "fetch branches",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of Project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Branch"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plans/{planId}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "fetch Plan By ID",
        "description": "fetch Plan By ID",
        "operationId": "fetchPlanById",
        "parameters": [
          {
            "name": "PlanId",
            "in": "path",
            "description": "ID of Plan to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/plans/{planId}/tasks": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "fetch tasks of plan",
        "description": "fetch tasks of plan",
        "operationId": "fetchTasks",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "ID of Plan",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tasks/{taskId}/logs": {
      "get": {
        "tags": [
          "Plans"
        ],
        "summary": "fetch logs of task",
        "description": "fetch logs of task",
        "operationId": "fetchTaskLogs",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of Task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "$ref": "#/components/schemas/TOTAL"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Log"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/session": {
      "post": {
        "tags": [
          "Session"
        ],
        "operationId": "createSession",
        "summary": "create session of a user",
        "description": "用户登录",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "account": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid Input"
          }
        }
      },
      "delete": {
        "tags": [
          "Session"
        ],
        "operationId": "destroySession",
        "summary": "destroy session of a user",
        "description": "用户登出",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "fetch User",
        "description": "fetch User",
        "operationId": "fetchUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Object",
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "401": {
            "description": "UnAuthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "type": "object",
        "description": "动作",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "project": {
            "type": "integer",
            "x-mock": "@integer",
            "x-$ref": "#/components/schemas/Project"
          },
          "hook": {
            "type": "integer",
            "x-mock": "@integer"
          },
          "creator": {
            "x-$ref": "#/components/schemas/Admin",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "description": "更新时间123222",
            "x-mock": "@datetime"
          }
        }
      },
      "Admin": {
        "type": "object",
        "description": "管理员",
        "properties": {
          "id": {
            "description": "ID",
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "description": "名字",
            "x-mock": "@word"
          },
          "cname": {
            "type": "string",
            "description": "中文名",
            "x-mock": "@cname"
          },
          "password": {
            "type": "string",
            "description": "密码",
            "x-mock": ""
          },
          "status": {
            "type": "integer",
            "description": "用户目前的状态(0允许/1禁止/2锁定)",
            "enum": [
              0,
              1,
              2
            ],
            "x-mock": "0"
          },
          "creator": {
            "x-$ref": "#/components/schemas/Admin",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          }
        }
      },
      "Branch": {
        "type": "object",
        "description": "分支",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "x-mock": "@string"
          },
          "project": {
            "type": "integer",
            "x-mock": "@integer",
            "x-$ref": "#/components/schemas/Project"
          },
          "protected": {
            "type": "boolean",
            "x-mock": "@boolean"
          },
          "lastCommit": {
            "type": "string",
            "x-mock": "@commitid"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "description": "更新时间",
            "x-mock": "@datetime"
          }
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-mock": "@string"
          },
          "author_name": {
            "type": "string",
            "x-mock": "@name"
          },
          "author_email": {
            "type": "string",
            "x-mock": "@email"
          },
          "message": {
            "type": "string",
            "x-mock": "@paragraph"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          }
        }
      },
      "Diff": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "file": {
            "type": "string",
            "x-mock": "@path"
          },
          "oldCommit": {
            "type": "string",
            "x-mock": "@string"
          },
          "newCommit": {
            "type": "string",
            "x-mock": "@string"
          },
          "alines": {
            "type": "string",
            "x-mock": "@string"
          },
          "blines": {
            "type": "string",
            "x-mock": "@string"
          }
        }
      },
      "Hook": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "x-mock": "@string"
          },
          "type": {
            "type": "string",
            "x-mock": "@string"
          },
          "creator": {
            "x-$ref": "#/components/schemas/DeviceType",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          }
        }
      },
      "Log": {
        "type": "object",
        "description": "日志",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "content": {
            "type": "string",
            "x-mock": "@cparagraph"
          },
          "task": {
            "$ref": "#/components/schemas/ID",
            "x-$ref": "#/components/schemas/Task"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          }
        }
      },
      "Plan": {
        "type": "object",
        "description": "计划",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "operator": {
            "type": "integer",
            "description": "操作人",
            "x-$ref": "#/components/schemas/Admin",
            "x-mock": "@integer"
          },
          "name": {
            "type": "string",
            "description": "任务名称",
            "x-mock": "@ctitle"
          },
          "description": {
            "type": "string",
            "description": "任务描述",
            "x-mock": "@cparagraph"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "description": "定时时间",
            "x-mock": "@datetime"
          },
          "executeAt": {
            "type": "string",
            "format": "date-time",
            "description": "执行时间",
            "x-mock": "@datetime"
          },
          "completeAt": {
            "type": "string",
            "format": "date-time",
            "description": "完成时间",
            "x-mock": "@datetime"
          },
          "creator": {
            "x-$ref": "#/components/schemas/Admin",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "x-mock": "@datetime"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "x-mock": "@ctitle"
          },
          "repository": {
            "type": "string",
            "x-mock": "https://github.com/@word(6)/@word(6).git"
          },
          "creator": {
            "x-$ref": "#/components/schemas/Admin",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "description": "更新时间",
            "x-mock": "@datetime"
          }
        }
      },
      "Task": {
        "type": "object",
        "description": "任务",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "plan": {
            "x-$ref": "#/components/schemas/Plan",
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "description": "任务名称",
            "x-mock": "@ctitle"
          },
          "description": {
            "type": "string",
            "description": "任务描述",
            "x-mock": "@cparagraph"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "creator": {
            "x-$ref": "#/components/schemas/Admin",
            "$ref": "#/components/schemas/ID"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "description": "创建时间",
            "x-mock": "@datetime"
          },
          "executeAt": {
            "type": "string",
            "format": "date-time",
            "description": "下发时间",
            "x-mock": "@datetime"
          },
          "completeAt": {
            "type": "string",
            "format": "date-time",
            "description": "完成时间",
            "x-mock": "@datetime"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "description": "更新时间",
            "x-mock": "@datetime"
          }
        }
      },
      "ID": {
        "type": "integer",
        "x-mock": "@integer(0,100000)"
      },
      "TOTAL": {
        "type": "integer",
        "x-mock": "@integer(10,100)"
      },
      "COMMITID": {
        "type": "string",
        "x-mock": "@string"
      },
      "ActionType": {
        "type": "string",
        "description": "动作类型",
        "enum": [
          "TEST",
          "BUILD",
          "PREVIEW",
          "PUBLISH",
          "OTHER"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "description": "任务执行状态(0未执行/1执行中/2执行成功/3执行失败)",
        "default": "Pending",
        "enum": [
          "Pending",
          "Processing",
          "Success",
          "Fail"
        ]
      }
    },
    "requestBodies": {},
    "responses": {}
  },
  "tags": [
    {
      "name": "Admins",
      "description": "管理员"
    },
    {
      "name": "Projects",
      "description": "项目"
    },
    {
      "name": "Plans",
      "description": "计划&任务相关"
    },
    {
      "name": "Hooks",
      "description": "webhooks"
    },
    {
      "name": "Actions",
      "description": "actions"
    },
    {
      "name": "Session",
      "description": "会话"
    }
  ]
}